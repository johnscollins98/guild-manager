version: '3.8'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  guild-manager:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer
    # folder. Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    image: imbios/bun-node:1.2-22-alpine
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/guild-manager:cached
      - guild_manager_node_modules:/guild-manager/node_modules
      - guild_manager_client_node_modules:/guild-manager/client/node_modules

    depends_on:
      db:
        condition: service_healthy
        restart: true

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

  db:
    image: postgres:17-alpine
    restart: always
    environment:
      - PGUSER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5132:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
  guild_manager_node_modules:
  guild_manager_client_node_modules:
